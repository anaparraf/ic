#            NR_CPF_CANDIDATO = as.character(NR_CPF_CANDIDATO),
#            CD_COR_RACA = as.character(CD_COR_RACA))}
#
# year = c(2000, 2004, 2008, 2012, 2016, 2020)
#
# candidates_info <- map_df(year, function_candidates_info)
#
# write.csv(candidates_info, file = 'candidates_info.csv', row.names = FALSE)
#
#
# candidates_info <- read.csv('candidates_info.csv')
#
# candidates_info |> head(5)
# candidates <- candidates_info %>%
#   rename(
#     ano = ANO_ELEICAO,
#     estado = SG_UF,
#     cargo = DS_CARGO,
#     candidato = NM_CANDIDATO,
#     genero = DS_GENERO,
#     partido = SG_PARTIDO,
#     idade = NR_IDADE_DATA_POSSE,
#     educacao = DS_GRAU_INSTRUCAO) %>%
#   filter(ano >= 2000 & ano <= 2016,
#          cargo == 'PREFEITO')  %>%
#   select(ano, estado, candidato, genero, partido, idade, educacao) %>%
#   group_by(ano, estado, candidato) %>%
#   summarise(genero = first(genero),
#             partido = first(partido),
#             idade = first(idade),
#             educacao = first(educacao))
# elections_info <- read.csv('elections_info.csv')
#
# tse_ibge_muni <- read.csv('municipios_brasileiros_tse.csv')
#
#
# elections_results <- elections_info %>%
#   mutate(qt_votos = case_when(ANO_ELEICAO == 2000 ~ QT_VOTOS_NOMINAIS_VALIDOS,
#                                .default = QT_VOTOS_NOMINAIS)) |>
#   rename(ano = ANO_ELEICAO,
#     estado = SG_UF,
#     cargo = DS_CARGO,
#     municipio = NM_MUNICIPIO,
#     cd_municipio = CD_MUNICIPIO,
#     zona = NR_ZONA,
#     candidato = NM_CANDIDATO,
#     votos = qt_votos) %>%
#   filter(ano >= 2000 & ano <= 2016,
#     cargo == 'Prefeito') |>
#   select(ano, estado,  municipio, cd_municipio, zona, candidato, votos) %>%
#   left_join(candidates, by = c('ano', 'estado', 'candidato')) |>
#   group_by(ano, estado, municipio, candidato) %>%
#   summarise(cd_municipio = first(cd_municipio),
#             votos_totais = sum(votos),
#             genero = first(genero),
#             partido = first(partido),
#             idade = first(idade),
#             educacao = first(educacao)) %>%
#   arrange(ano, estado, municipio, desc(votos_totais)) %>%
#   slice_max(order_by = votos_totais, n = 2) %>%
#   mutate(margem = votos_totais/sum(votos_totais)) %>%
#   group_by(ano, estado, municipio) %>%
#   summarise(
#     cd_municipio = first(cd_municipio),
#     nome_eleito = first(candidato),
#     partido_eleito = first(partido),
#     idade_eleito = first(idade),
#     educacao_eleito = first(educacao),
#     cont_fem = sum(genero == 'FEMININO'),
#     margem_fem = sum(margem[genero == "FEMININO"]),
#     margem_mas = sum(margem[genero == "MASCULINO"]),
#     margem_vitoria_mulher = (margem_fem - margem_mas),
#     mulher_eleita = margem_vitoria_mulher > 0 ,
#     .groups = 'drop') %>%
#   filter(cont_fem == 1) |>
#   select(ano, estado, municipio, margem_vitoria_mulher, everything(),-cont_fem,-margem_fem,-margem_mas) |>
#   left_join(total_votantes, by=c('municipio', 'ano')) |>
#   left_join(tse_ibge_muni, by=c('cd_municipio' = 'codigo_tse')) |>
#   select(-uf, -nome_municipio, -capital)
#
# write.csv(elections_results, file = 'elections_results.csv', row.names = FALSE)
#
#
pop <- read_xlsx('dados/estimativa_pop_municipio.xlsx', sheet = 'Planilha1')
#
# muni_pop <- pop |>
#   rename(municipio = Município) |>
#   mutate(cd_municipio = substr(municipio, 1, 6),
#          municipio = substr(municipio,8, nchar(municipio))) |>
#   melt(c('cd_municipio','municipio'))  |>
#   rename(ano = variable,
#          pop = value) |>
#   mutate(municipio = iconv(municipio, from = "UTF-8", to = "ASCII//TRANSLIT"),
#        municipio = str_replace_all(municipio, "[^A-Za-z0-9 ]", ""))
elections_results <- read.csv('dados/elections_results.csv')
# 1 - partido
elections_results |>
count(partido_eleito, sort = TRUE) |>
head(10) |>
mutate(partido_eleito = fct_reorder(partido_eleito, n)) |>
ggplot(aes(partido_eleito, n)) +
geom_col() +
coord_flip()
# 2 - partido
elections_results %>%
count(partido_eleito, mulher_eleita, sort = TRUE) %>%
group_by(partido_eleito) %>%
mutate(total = sum(n)) %>%
ungroup() %>%
mutate(partido_eleito = fct_reorder(partido_eleito, total, .desc = TRUE)) %>%
slice_max(order_by = total, n = 20) %>%
ggplot(aes(x = partido_eleito, y = n, fill = mulher_eleita)) +  # Fill based on gender
geom_col(show.legend = TRUE, position = 'dodge') +  # Show legend to distinguish male/female
coord_flip() +
labs(title = "Eleições Ganhas - Homens x Mulheres",
x = "Partido",
y = "Numero de eleições ganhas",
fill = "Mulher eleita")
# 3 - ano
elections_results |>
ggplot(aes(x = as.factor(ano), fill = mulher_eleita)) +
geom_bar(position = 'stack')
# 4 - estado
elections_results %>%
mutate(estado = fct_rev(fct_infreq(as.factor(estado)))) %>%
ggplot(aes(x = estado, fill = mulher_eleita)) +
geom_bar() +
ggtitle('...')+
coord_flip()
# 5 - estado
library(scales)
elections_results %>%
mutate(estado = fct_rev(fct_infreq(as.factor(estado)))) %>%
ggplot(aes(x = estado, fill = mulher_eleita)) +
geom_bar(position = 'fill') +
coord_flip() +
labs(x = "Estado", y = "Proporção", fill = "Mulher Eleita?") +
geom_hline(yintercept = .50, linetype = "dashed", color = "yellow", linewidth = 1) +
scale_y_continuous(labels = percent)
# 6 - idade
# melhorar, botar a media de cada grupo por exemplo.
elections_results %>%
ggplot(aes(idade_eleito, fill = mulher_eleita)) +
geom_density(data = . %>% filter(mulher_eleita == TRUE), color = "blue", size = 1, alpha = 1) +
geom_density(data = . %>% filter(mulher_eleita == FALSE), color = "red", size = 1, alpha = .78) +
labs(title = "idade_eleito",
x = "idade",
y = "Frequência") +
theme_minimal() +
lims(x = c(18, 80))
# 7 - escolaridade
# MELHORAR ESSA VISUALIZACAO PELO AMOR DE DEUS!!!!!!!!!!!! Mas informacoes mt valiosas
elections_results %>%
ggplot(aes(x = mulher_eleita, fill = educacao_eleito)) +
geom_bar() +
ggtitle('...')+
coord_flip()
# 8 - abstencao
elections_results %>%
ggplot(aes(tx_abstencao, fill = mulher_eleita)) +
geom_density(data = . %>% filter(mulher_eleita == TRUE), color = "blue", size = 1, alpha = 1) +
geom_density(data = . %>% filter(mulher_eleita == FALSE), color = "red", size = 1, alpha = .78) +
labs(title = "Distribuição das Abstenções",
x = "Tx_abstencao",
y = "Frequência") +
theme_minimal() +
lims(x = c(0, 0.3))
# library(stringr)
# library(stringi)
#
# rotulo_muni2005 <- read_excel('cd_muni_pre_2005.xls')
#
#
# rotulo2005 <- rotulo_muni2005 |>
#   rename(cd_municipio = `Código Município Completo`,
#          nm_municipio = Nome_Município) |>
#   mutate(nm_municipio = iconv(nm_municipio, from = "UTF-8", to = "ASCII//TRANSLIT"),
#          nm_municipio = str_replace_all(nm_municipio, "[^A-Za-z0-9 ]", ""),
#          nm_municipio = toupper(nm_municipio))
#
# pop <- read_xlsx('estimativa_pop_municipio.xlsx', sheet = 'Planilha1')
#
#
# rotulo <- pop |>
#   rename(municipio = Município) |>
#   mutate(cd_municipio = substr(municipio, 1, 6),
#          municipio = substr(municipio,8, nchar(municipio))) |>
#   melt(c('cd_municipio','municipio'))  |>
#   rename(ano = variable,
#          pop = value) |>
#   mutate(municipio = iconv(municipio, from = "UTF-8", to = "ASCII//TRANSLIT"),
#        municipio = str_replace_all(municipio, "[^A-Za-z0-9 ]", "")) |>
#   select(cd_municipio, municipio) |>
#   rename(nm_municipio = municipio)
#
#
# datasus <- read.csv('datasus_completo.csv')
#
#
# rotulo_final <- datasus |>
#   mutate(municipio = as.character(municipio),
#          idade = as.character(idade),
#   idade = substr(idade, 2, 3)) |>
#   group_by(municipio) |>
#   summarise() |>
#   left_join(rotulo2005, by = c('municipio' = 'cd_municipio')) |>
#   left_join(rotulo, by = c('municipio' = 'cd_municipio')) |>
#   mutate(nm_municipio = coalesce(nm_municipio.x, nm_municipio.y))  |>
#   select(-nm_municipio.x, -nm_municipio.y) |>
#   group_by(municipio) |>
#   summarise(nm_municipio = first(nm_municipio))
# domestic_homicide <- datasus |>
#   mutate(municipio = as.character(municipio),
#          idade = as.character(idade),
#          idade = substr(idade, 2, 3),
#          idade = as.numeric(idade),
#          municipio = as.character(municipio),
#          estado = substr(municipio, 1,2)) |>
#   left_join(rotulo_final, by = c('municipio')) |>
#   select(data, ano_obito, estado, municipio, nm_municipio, everything()) |>
#   filter(idade >= 15 & idade <= 49,
#          local == 3,
#          sexo == 2,# ambiente domestico
#          ano_obito <= 2020 & ano_obito > 2000) |> # somente 3 mandatos. 2004, 2008, 2012
#   group_by(mandato, estado , nm_municipio) |>
#   summarize(domestic_homicides = n())
#
# all_homicide <- datasus |>
#   mutate(municipio = as.character(municipio),
#          idade = as.character(idade),
#          idade = substr(idade, 2, 3),
#          idade = as.numeric(idade),
#          municipio = as.character(municipio),
#          estado = substr(municipio, 1,2)) |>
#   left_join(rotulo_final, by = c('municipio')) |>
#   select(data, ano_obito, estado, municipio, nm_municipio, everything()) |>
#   filter(idade >= 15 & idade <= 49, # ambiente domestico
#          ano_obito <= 2020 & ano_obito > 2000,
#          sexo == 2) |>
#   group_by(mandato, estado , nm_municipio) |>
#   summarize(all_homicides = n())
#
#
#
# datasus_final <- domestic_homicide |>
#   left_join(all_homicide, by= c('mandato', 'estado', 'nm_municipio')) |>
#   mutate(estado = as.character(estado))
#
# write.csv(datasus_final, file = 'datasus_final.csv', row.names = FALSE)
datasus_final <- read.csv('dados/datasus_final.csv') |>
mutate(estado = as.character(estado))
muni_pop <- pop |>
rename(municipio = Município) |>
mutate(cd_municipio = substr(municipio, 1, 6),
municipio = substr(municipio,8, nchar(municipio))) |>
melt(c('cd_municipio','municipio'))  |>
rename(ano = variable,
pop = value) |>
select(-municipio) |>
mutate(pop = ifelse(pop == '-', NA, as.numeric(pop))) |>
arrange(cd_municipio, ano) |>
group_by(cd_municipio) |>
fill(pop, .direction = 'up')
elections_final <- elections_results %>%
mutate(ano_t_1 = case_when(ano == 2004 ~ 2000,
ano == 2008 ~ 2004,
ano == 2012 ~ 2008,
ano == 2016 ~ 2012,
ano == 2020 ~ 2016,
.default = NA)) |>
mutate(municipio = iconv(municipio, from = "UTF-8", to = "ASCII//TRANSLIT"),
municipio = str_replace_all(municipio, "[^A-Za-z0-9 ]", ""),
municipio = str_replace_all(municipio, "\\bD ", "D"),
municipio = trimws(municipio, which = "right"),
codigo_ibge = as.character(codigo_ibge),
cd_estado = substr(codigo_ibge,1,2)) %>%
left_join(datasus_final, by=c('ano' = 'mandato', 'cd_estado' = 'estado', 'municipio' = 'nm_municipio')) %>%
select(ano, estado, municipio, codigo_ibge, domestic_homicides, all_homicides, margem_vitoria_mulher, everything()) |>
mutate(all_homicides = replace_na(all_homicides, 0),
domestic_homicides = replace_na(domestic_homicides, 0),
codigo_ibge = as.character(codigo_ibge),
codigo_ibge_att = substr(codigo_ibge, 1, 6),
ano = as.factor(ano)) |>
left_join(muni_pop, by=c('codigo_ibge_att' = 'cd_municipio', 'ano')) |>
mutate(pop = as.integer(pop),
tx_homicidio_domestico = (domestic_homicides/pop)*100000,
tx_homicidio_geral = (all_homicides/pop)*100000) |>
select(ano, estado, municipio, margem_vitoria_mulher, tx_homicidio_domestico, tx_homicidio_geral, everything(), -cd_municipio) |>
filter(total_votantes < 200000) |>
left_join(datasus_final, by=c('ano_t_1' = 'mandato', 'cd_estado' = 'estado', 'municipio' = 'nm_municipio')) |>
rename(domestic_homicides = domestic_homicides.x,
all_homicides = all_homicides.x,
domestic_homicides_t1 = domestic_homicides.y,
all_homicides_t1 = all_homicides.y) |>
mutate(all_homicides_t1 = replace_na(all_homicides_t1, 0),
domestic_homicides_t1 = replace_na(domestic_homicides_t1, 0),
tx_homicidio_domestico_t1 = (domestic_homicides_t1/pop)*100000,
tx_homicidio_geral_t1 = (all_homicides_t1/pop)*100000)
elections_final |>
filter(ano != 2000 & ano != 2016) |>
ggplot(aes(x = margem_vitoria_mulher, fill=mulher_eleita)) +
geom_histogram(binwidth =.05, boundary = 0, color = 'white') +
geom_vline(xintercept = 0) +
scale_fill_manual(values = c("#90d2d8", "#f6a6b2"),
labels = c("Male Elected", "Female Elected")) +
labs(title = "Victory Margins in Brazilian Municipal Elections",
subtitle = "Mayoral runs between men and women (2004 - 2016)",
x = "Women's Margin of Victory",
y = NULL,
color = 'Woman Elected',
fill = NULL,
caption = "By InsperData") +
theme_minimal() +
theme(legend.position = "top",
plot.caption = element_text(color = "#3494ba", size = 11),
plot.title = element_text(size = 14),
plot.subtitle = element_text(size = 11, color = 'black'),
axis.title.y = element_text(margin = margin(r = 10, unit = "pt"), size = 11),
axis.title.x = element_text(margin = margin(t = 10, unit = "pt"), size = 11),
text=element_text(family="Segoe UI", size=12)) +
scale_x_continuous(labels = scales::percent)
library(extrafont)
elections_final %>%
filter(ano != 2000 & ano != 2016) |>
mutate(band_width = cut(margem_vitoria_mulher, breaks = seq(-1, 1, by = 0.01))) %>%
group_by(band_width) %>%
summarize(tx_homicidio_domestico = mean(tx_homicidio_domestico),
tx_homicidio_geral = mean(tx_homicidio_geral),
mulher_eleita = first(mulher_eleita)) %>%
mutate(band_width = as.character(as.numeric(band_width) - 100),
margem = as.numeric(band_width) - 0.5) %>%
ggplot(aes(margem, y = tx_homicidio_domestico, color = as.factor(mulher_eleita))) +
geom_point() +
geom_smooth(method = 'loess', se = FALSE, size = 1) +
labs(title = 'Close Elections and Violence Against Women',
subtitle = 'Effects of having a Female Mayor (2004 - 2012)',
x = "Women's Margin of Victory (%)",
y = "Homicide Rates of Women - Domestic",
color = NULL) +
scale_color_manual(values = c("#90d2d8", "#f6a6b2"),
labels = c("Male Elected", "Female Elected")) +
theme_minimal() +
labs(caption = "By InsperData") +
theme(legend.position = "top",
plot.caption = element_text(color = "#3494ba", size = 11),
plot.title = element_text(size = 14),
plot.subtitle = element_text(size = 11, color = 'black'),
axis.title.y = element_text(margin = margin(r = 10, unit = "pt"), size = 11),
axis.title.x = element_text(margin = margin(t = 10, unit = "pt"), size = 11),
text=element_text(family="Segoe UI", size=12)) +
ylim(0, 5) +
xlim(-15,15)
elections_final %>%
filter(ano != 2000 & ano != 2016) |>
mutate(band_width = cut(margem_vitoria_mulher, breaks = seq(-1, 1, by = 0.01))) %>%
group_by(band_width) %>%
summarize(tx_homicidio_domestico_t1 = mean(tx_homicidio_domestico_t1),
tx_homicidio_geral_t1 = mean(tx_homicidio_geral_t1),
mulher_eleita = first(mulher_eleita)) %>%
mutate(band_width = as.character(as.numeric(band_width) - 100),
margem = as.numeric(band_width) - 0.5) %>%
ggplot(aes(margem, y = tx_homicidio_domestico_t1, color = as.factor(mulher_eleita))) +
geom_point() +
geom_smooth(method = 'loess', se = FALSE, size = 1) +
labs(title = 'Close Elections and Violence Against Women - Robustness test',
subtitle = 'Effects of having a Female Mayor (2004 - 2012)',
x = "Women's Margin of Victory (%)",
y = "Homicide Rates of Women - Domestic",
color = NULL) +
scale_color_manual(values = c("#90d2d8", "#f6a6b2"),
labels = c("Male Elected", "Female Elected")) +
theme_minimal() +
labs(caption = "By InsperData") +
theme(legend.position = "top",
plot.caption = element_text(color = "#3494ba", size = 11),
plot.title = element_text(size = 14),
plot.subtitle = element_text(size = 11, color = 'black'),
axis.title.y = element_text(margin = margin(r = 10, unit = "pt"), size = 11),
axis.title.x = element_text(margin = margin(t = 10, unit = "pt"), size = 11),
text=element_text(family="Segoe UI", size=12)) +
ylim(0, 5) +
xlim(-15,15)
reg_dom <- elections_final |>
filter(ano != 2000 & ano != 2016)
controls <- model.matrix(~ educacao_eleito + partido_eleito + pop + idade_eleito + Mulher, data = reg_dom)
modelsummary(models, statistic = NULL, estimate = '{estimate} {stars}', stars = )
models <- list(
"(1)" =  rdrobust(reg_dom$tx_homicidio_domestico, reg_dom$margem_vitoria_mulher,
covs = controls,
c = 0,
kernel= 'triangular',
h=0.05,
cluster = reg_dom$codigo_ibge
),
"(2)" =  rdrobust(reg_dom$tx_homicidio_domestico, reg_dom$margem_vitoria_mulher,
covs = controls,
c = 0,
kernel= 'triangular',
h=0.10,
cluster = reg_dom$codigo_ibge
),
"(3)" =  rdrobust(reg_dom$tx_homicidio_domestico, reg_dom$margem_vitoria_mulher,
covs = controls,
c = 0,
kernel= 'triangular',
h=0.165,
cluster = reg_dom$codigo_ibge
),
"(4)" =  rdrobust(reg_dom$tx_homicidio_domestico, reg_dom$margem_vitoria_mulher,
covs = controls,
c = 0,
kernel= 'triangular',
h=0.25,
cluster = reg_dom$codigo_ibge
),
"(5)" =  rdrobust(reg_dom$tx_homicidio_domestico, reg_dom$margem_vitoria_mulher,
covs = controls,
c = 0,
kernel= 'triangular',
h=0.4,
cluster = reg_dom$codigo_ibge
),
"(6)" =  rdrobust(reg_dom$tx_homicidio_domestico, reg_dom$margem_vitoria_mulher,
covs = controls,
c = 0,
kernel= 'triangular',
h=0.7,
cluster = reg_dom$codigo_ibge
),
"(7)" =  rdrobust(reg_dom$tx_homicidio_domestico, reg_dom$margem_vitoria_mulher,
covs = controls,
c = 0,
kernel= 'triangular',
h=1,
cluster = reg_dom$codigo_ibge
),
"(8)" =  rdrobust(reg_dom$tx_homicidio_domestico_t1, reg_dom$margem_vitoria_mulher,
covs = controls,
c = 0,
kernel= 'triangular',
h=0.05,
cluster = reg_dom$codigo_ibge
),
"(9)" =  rdrobust(reg_dom$tx_homicidio_domestico_t1, reg_dom$margem_vitoria_mulher,
covs = controls,
c = 0,
kernel= 'triangular',
cluster = reg_dom$codigo_ibge
),
"(10)" =  rdrobust(reg_dom$tx_homicidio_domestico_t1, reg_dom$margem_vitoria_mulher,
covs = controls,
c = 0,
kernel= 'triangular',
h=1,
cluster = reg_dom$codigo_ibge
)
)
library('read.dbc')
library(tidyverse)
acidentes <- read.csv("Acidentes_DadosAbertos_20240512.csv", sep = ';')
install.packages('ggwaffle')
install.packages("installr")
library(installr)
updateR()
library(tidyverse)
load("C:/Users/anapa/Insper Data/Governança/2024.2/atividades_ciclobasico/codigo/dfs_sprint1.RData")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache.lazy = FALSE)
setwd("C:/Users/anapa/Iniciação científica/git")
# install.packages("censobr")  #instalar biblioteca do censo
library(censobr)
library(dplyr)
#definindo variáveis
colunas = c('code_muni','abbrev_state', 'V0002', 'V0601', 'V6036', 'V0606','V6400','V6525','V6930')
pop <- read_population(
year = 2010,          # year of reference
columns = colunas,       # select columns to read
add_labels = 'pt',    # add labels to categorical variables
as_data_frame = TRUE, # return an Arrow DataSet se FALSE, data.frame se TRUE
showProgress = TRUE,  # show download progress bar
cache = TRUE       # cache data for faster access later
)
#definindo variáveis
colunas = c('code_muni','abbrev_state', 'V0002', 'V0601', 'V6036', 'V0606','V6400','V6525','V6930')
pop <- read_population(
year = 2010,          # year of reference
columns = colunas,       # select columns to read
add_labels = 'pt',    # add labels to categorical variables
as_data_frame = TRUE, # return an Arrow DataSet se FALSE, data.frame se TRUE
showProgress = TRUE,  # show download progress bar
cache = TRUE       # cache data for faster access later
)
# censobr::censobr_cache(delete_file = "C:/Users/anapa/AppData/Local/R/cache/R/censobr/data_release_v0.3.0/2010_population_v0.3.0.parquet")
pop |>
rename(sexo = V0002, idade = V6036, cor_raca = V0606, nivel_instrucao = V6400, rendimento = V6525, ocupacao_emprego = V6930)
pop |>
rename(sexo = V0002, idade = V6036, cor_raca = V0606, nivel_instrucao = V6400, rendimento = V6525, ocupacao_emprego = V6930) |>
filter(rendimento != is.na())
pop |>
rename(sexo = V0002, idade = V6036, cor_raca = V0606, nivel_instrucao = V6400, rendimento = V6525, ocupacao_emprego = V6930) |>
filter(rendimento != is.na(rendimento))
setwd("C:/Users/anapa/Iniciação científica/git")
dados <- pop |>
rename(sexo = V0002, idade = V6036, cor_raca = V0606, nivel_instrucao = V6400, rendimento = V6525, ocupacao_emprego = V6930) |>
filter(rendimento != is.na(rendimento))
write.csv(dados,"dados/censo.csv")
write.csv(dados, "dados/censo.csv")
write_csv(dados, "dados/censo.csv")
library(tidyverse)
write_csv(dados, "dados/censo.csv")
write_csv(dados, "dados/censo.csv")
write_csv(dados, "dados/censo.csv")
write_csv(dados, "dados/censo.csv")
